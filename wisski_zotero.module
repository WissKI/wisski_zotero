<?php
// $ID$

function wisski_zotero_getObj() {
  global $db_url;
  global $base_url;

  $db_conn = parse_url($db_url);
  $storecfg = array(
    'db_name' => urldecode(variable_get('wisski_database', substr($db_conn['path'], 1))),
    'db_host' => urldecode($db_conn['host']),
    'db_user' => urldecode($db_conn['user']),
    'db_pwd' => urldecode($db_conn['pass']),
    'store_name' => variable_get('wisski_table', 'wissKI'),
  );

  $wisski = new wisski_Store($storecfg, $base_url);
  return $wisski;
  
}

/**Initialize and ask the triple store to handle the endpoint request
*
* @author Martin Scholz
*
*/
function wisski_zotero_endpoint_serve() {

  // get the ap id
  $id = variable_get('wisski_zotero_ap', -1);
  
  // fetch the WissKI triple store config
//  drupal_load('module', 'wisski_store');
//  $config = wisski_store_getObj()->config;

//  $config['store_name'] = "Zotero-store";
      
  // define which SPARQL verbs may be used by the user
//  $config['endpoint_features'] = _wisski_endpoint_access_verbs();
           
  $user = "groups";
  $userID = 161480;
  $apiKey = 'bgDMN6S6TZ9EhumM6FFMy79T';
 
  /*
  $curl = curl_init();
  curl_setopt($curl, CURLOPT_URL, 'https://api.zotero.org/' . $user . '/' . $userID . '/items?key=' . $apiKey . '&content=rdf_zotero');
  //https://api.zotero.org/users/475425/collections/9KH9TNSJ/items?format=rdf_zotero
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
 
  $resp = curl_exec($curl);
  curl_close($curl);
  */
 
  //$wisski = new wisski_Store($config, $base_url);

  //$store = $wisski->wisski_ARCAdapter_getStore();
 
  $store = wisski_accesspoint_get($id,'endpoint');
 
//  return serialize($store);
 
  $query = 'LOAD <https://api.zotero.org/' . $user . '/' . $userID . '/items?key=' . $apiKey . '&content=rdf_zotero>';
  
//  return serialize($query);
 
  $store->query($query);
 
      
  // define which SPARQL verbs may be used by the user
//  $config['endpoint_features'] = _wisski_endpoint_access_verbs();

//  return serialize($store);

  $config = $store->a;

//  return serialize($config);

  $config['endpoint_features'] = _wisski_endpoint_access_verbs();
          
  /* instantiation */
  $ep = ARC2::getStoreEndpoint($config);
              
  if (!$ep->isSetUp()) {  // should
    $ep->setUp(); /* create MySQL tables */
  }
              
  /* request handling */
  $ep->go();
 
}

function wisski_zotero_menu() {

  $items['wisski/zoteroendpoint'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'SparQL Endpoint',
    'page callback' => 'wisski_zotero_endpoint_serve',
    'access callback' => TRUE,
//    'access callback' => '_wisski_endpoint_check_access',
//    'file' => 'wisski_endpoint.inc',
  );
  $items['admin/settings/wisski/zoteroendpoint'] = array(
    'title' => 'Zotero Endpoint',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wisski_endpoint_admin_settings'),
//    'access arguments' => array('wisski administrate endpoint'),
//    'file' => 'wisski_endpoint.inc',
  );
                                                    
  return $items;
                                                     
}
                                                      
                            
                                                